{% extends '::base.html.twig' %}

{% block javascripts_head %}
    {{ parent() }}

    <script src="{{ asset('bundles/app/vendor/d3/d3.js') }}"></script>
    <script src="{{ asset('bundles/app/vendor/d3-tip/index.js') }}"></script>

    <script src="{{ asset('bundles/app/vendor/nvd3/build/nv.d3.js') }}"></script>
    <link href="{{ asset('bundles/app/vendor/nvd3/build/nv.d3.css') }}" rel="stylesheet">

    <script>
        var journeymonitor = {
            'renderTestresults': function(testcaseId, testresults) {

                var getDate = function(index) {
                    testresults[index].dateTimeRun.date + '(' + testresults[index].dateTimeRun.timezone + ')';
                };

                console.log(testresults);

                var numberOf200Values = [
                    {'x': 0, 'y': 20},
                    {'x': 1, 'y': 24},
                    {'x': 2, 'y': 12}
                ];

                var numberOf400Values = [
                    {'x': 0, 'y': 4},
                    {'x': 1, 'y': 1},
                    {'x': 2, 'y': 3}
                ];

                var numberOf500Values = [
                    {'x': 0, 'y': 5},
                    {'x': 1, 'y': 2},
                    {'x': 2, 'y': 4}
                ];

                var data = [
                    {'key': 'Status 200', 'values': numberOf200Values},
                    {'key': 'Status 400', 'values': numberOf400Values},
                    {'key': 'Status 500', 'values': numberOf500Values}
                ];

                nv.addGraph(function() {
                    var chart = nv.models.multiBarHorizontalChart()
                      .duration(350)
                      .showControls(true)   //Allow user to switch between 'Grouped' and 'Stacked' mode.
                      .groupSpacing(0.1)    //Distance between each group of bars.
                    ;

                    chart.xAxis
                        .tickFormat(d3.format(',f'));

                    chart.yAxis
                        .tickFormat(d3.format(',.1'));

                    d3.select('#testcase-' + testcaseId + '-chart svg')
                        .datum(data)
                        .call(chart);

                    nv.utils.windowResize(chart.update);

                    return chart;
                });
            }
        };
    </script>

{% endblock %}

{% block body %}
    <main>
        <div class="container">
            <div class="row">
                <div class="col-xs-12">
                    <h4>Your testcases</h4>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="panel panel-info">
                                <p class="panel-body">
                                    Hover over (on mobile: tap) each block in the timeline for
                                    access to the Selenium <b>logs</b>, web performance
                                    <b>metrics</b> (detailed waterfall for each page requested), and
                                    failure <b>screenshots</b>.
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="pagenav">
                        <a class="pull-right" {% if (not isDemoMode) %} href="{{ path('testcases.new') }}" {% else %} data-toggle="tooltip" data-placement="top" title="Not available in demo mode" {% endif %}>ï¼‹ Add another testcase</a>
                    </div>

                    <table class="table testcases">
                        {{ include('AppBundle:testcases:_testcases-list.html.twig') }}
                    </table>
                </div>
            </div>
        </div>
    </main>

{% endblock %}

{% block javascripts_additional %}
{% endblock %}
